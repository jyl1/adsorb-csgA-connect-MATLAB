echo on
% dataRead_SurfContacts.m
% Oct.12, 2015. YJL
% Reads in .DAT files written by VMD corresponding to surfContact.tcl. 
% File format:
%   - 1 or more lines of header beginning with 'RUN'
%   - Lines of data with column
%   (1) Frame #
%   (2) Total protein atoms interacting with surface (cutoff distance)
%   (3) Total protein-surface interactions
%   (4-8) Protein-surface interactions by residue moiety: 1) polar
%   (neutral), 2) acid, 3) base, 4) hydrophobic, 5) aromatic
%   (9+) if protein-surface interactions exist, list the interacting atoms
% Outputs are saved as:
%   1) (surface)_surfContact_(orientation).mat - columns of 1749 atoms in
%   the protein. Each row is sum of data over 125 frame (250ps) 
%   2) (surface)_sum_surfContact_(orientation).mat - rows are data at each
%   frame (2ps). Columns are same as (1-8) 
echo off

%% Setup file to load data
fid = fopen(fp);
% Discard first header line
line1 = fgetl(fid);
while strcmp(line1(1:3),'RUN')
    line1 = fgetl(fid);
end

% The data is windowed (125 frames, 250ps) in order to compare with
% B-factor data (equivalent windowing). Protein has 1749 residues. Allocate
% with 10,000 rows of NaN for ample space. 
X = nan(10000,1749); % (windowed) # of interactions at each atom

% Summary data are collected as the number of protein-interaction by
% residue type
X_sum = nan(40000,8); % summary data (not windowed)

%% Initialization for while loop
% % Counters
ctr = 1;
ctrX = 1;
ctrX_sum = 1;

% % Dataholders
data = zeros(1, 1749); %wiped every 125 frames

%% While loop
% % initiated after removing header strings
strLine = line1;

% % Load data line by line. Covert line to 1D array. Use histc to organize
% % bins of 1-atom each. (This may be slow). 
while ischar(strLine) && ctr <= 125
    if ctr == 125 % 1 window has been filled
        % TROUBLESHOOT: window not filling sufficiently (off-by-1)
        % disp(num2str([ctrX mod(ctrX_sum,125) ctr floor(ctrX_sum/125)]))
        disp(num2str([ctrX])) % Output to monitor progress (sanity)
        X(ctrX,:) = data; ctrX = ctrX + 1;
        % reset vars associated with collecting data for 1 window
        ctr = 0;
        data = zeros(1, 1749);
    end
    
    dataLine = str2double(strsplit(strLine)); % read line --> array
    dataLine(isnan(dataLine))=[]; % remove nan
    X_sum(ctrX_sum,:) = dataLine(1:8); ctrX_sum = ctrX_sum+1;
    if length(dataLine)>8 % if lists of atoms are available
        % accumulate counts of atom-interactions by atom
        data = data + histc(dataLine(9:end), 1:1749);
    end
    
    % continue while loop?
    ctr = ctr + 1;
    strLine = fgetl(fid);
end
fclose(fid);
%% Clean up the lagging lines of data (<125 window) for X
X(ctrX,:) = data;
%% Remove nans as needed
% X: remove nan rows
X = X(any(~isnan(X),2),:); 
% X_sum: remove nan rows
X_sum = X_sum(any(~isnan(X_sum),2),:);
%    out = A(:,any(~isnan(A)));  % for columns
%    out = A(any(~isnan(A),2),:);   %for rows
%% Save files
dp = saveDP; 
saveStr = 'si_surfContact_';

% X
fp = [dp '\' saveStr expStr];
save(fp,'X');

% X_sum
saveStr = 'si_sum_surfContact_';
fp = [dp '\' saveStr expStr];
save(fp,'X_sum');

%% Report finished
disp('END')
